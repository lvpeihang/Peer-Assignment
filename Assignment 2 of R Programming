> makeCacheMatrix <- function(x=matrix()){
+       inv <<- NULL
+       set <- function(y){
+            x <<- y
+            inv <<- NULL
+        }
+        get <- function() x
+        setInverse <- function(inverse) inv <<- inverse
+        getInverse <- function() inv
+        list(set = set,
+             get = get,
+             setInverse = setInverse,
+             getInverse = getInverse)
+ }
> cacheSolve <- function(x, ...){
+       inv <- x$getInverse()
+       if(!is.null(inv)){
+              message("getting cached data")
+              return(inv)
+       }
+       mat <- x$get()
+       inv <- solve(mat, ...)
+       x$setInverse(inv)
+       inv
+ }
> savehistory("~/Untitled.Rhistory")
> my_matrix <- makeCacheMatrix(matrix(1:4, 2, 2))
> my_matrix$get()
     [,1] [,2]
[1,]    1    3
[2,]    2    4
> my_matrix$getInverse
function() inv
<environment: 0x11095ac28>
> cacheSolve(my_matrix)
     [,1] [,2]
[1,]   -2  1.5
[2,]    1 -0.5
> my_matrix$getInverse()
     [,1] [,2]
[1,]   -2  1.5
[2,]    1 -0.5
> my_matrix$set(matrix(c(2, 2, 1, 4), 2, 2))
> my_matrix$get()
     [,1] [,2]
[1,]    2    1
[2,]    2    4
> cacheSolve(my_matrix)
           [,1]       [,2]
[1,]  0.6666667 -0.1666667
[2,] -0.3333333  0.3333333
> my_matrix$getInverse()
           [,1]       [,2]
[1,]  0.6666667 -0.1666667
[2,] -0.3333333  0.3333333
